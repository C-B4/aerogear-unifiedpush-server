use unifiedpush_server;
create table if not exists documents (push_application_id uuid, database text, user_id text, snapshot timeuuid, document_id text, content text, content_type text, PRIMARY KEY ((push_application_id, database, user_id), snapshot)) WITH CLUSTERING ORDER BY (snapshot DESC);
create custom index if not exists idx_documents_id ON documents (document_id) USING 'org.apache.cassandra.index.sasi.SASIIndex' WITH OPTIONS = { 'mode': 'PREFIX', 'analyzer_class': 'org.apache.cassandra.index.sasi.analyzer.NonTokenizingAnalyzer', 'case_sensitive': 'true' };
create table if not exists databases (push_application_id uuid, snapshot timestamp, database text, PRIMARY KEY (push_application_id, snapshot)) WITH CLUSTERING ORDER BY (snapshot DESC);
create custom index if not exists idx_databases_database ON databases (database) USING 'org.apache.cassandra.index.sasi.SASIIndex' WITH OPTIONS = { 'mode': 'CONTAINS', 'analyzer_class': 'org.apache.cassandra.index.sasi.analyzer.NonTokenizingAnalyzer', 'case_sensitive': 'false' };
create table if not exists users (push_application_id uuid, id timeuuid, email text, mobile text, PRIMARY KEY (push_application_id, id));
create custom index if not exists idx_users_email ON users (email) USING 'org.apache.cassandra.index.sasi.SASIIndex' WITH OPTIONS = { 'mode': 'CONTAINS', 'analyzer_class': 'org.apache.cassandra.index.sasi.analyzer.NonTokenizingAnalyzer', 'case_sensitive': 'false' };
create custom index if not exists idx_users_mobile ON users (mobile) USING 'org.apache.cassandra.index.sasi.SASIIndex' WITH OPTIONS = { 'mode': 'CONTAINS', 'analyzer_class': 'org.apache.cassandra.index.sasi.analyzer.NonTokenizingAnalyzer', 'case_sensitive': 'false' };